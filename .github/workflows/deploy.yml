# ./github/workflows/deploy.yml

name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the "main" branch
  push:
    branches: main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build website
    runs-on: ubuntu-latest
    env:
      NO_CONTRACTS: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Debug Pages configuration
        run: |
          echo "Configuration status: ${{ steps.pages.outcome }}"
          echo "Error message: ${{ steps.pages.error }}"
          echo "All steps context: ${{ toJSON(steps) }}"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.0'

      - name: Ruby gem cache
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build Middleman site
        run: bundle exec middleman build --verbose 

      - name: Verify build output
        run: |
          if [ ! -d "./build" ] || [ -z "$(ls -A ./build)" ]; then
            echo "Build directory is empty or missing"
            exit 1
          fi

      - name: List build directory
        run: ls -la ./build

      - name: Upload artifact
        id: upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ github.workspace }}/build
          retention-days: 1

      - name: Debug Upload
        if: always()
        run: |
          echo "Upload step result: ${{ steps.upload.outcome }}"
          echo "Upload step conclusion: ${{ steps.upload.conclusion }}"
          
      - name: Check artifact
        run: |
          echo "Artifact path verification:"
          ls -la ${{ runner.temp }}
          find ${{ runner.temp }} -name "github-pages" -type f
          echo "Artifact name: ${{ steps.pages.outputs.artifact_name }}"
          echo "Artifact ID: ${{ steps.pages.outputs.artifact_id }}"
          echo "Upload step outputs: ${{ toJSON(steps.upload.outputs) }}"
          echo "All outputs: ${{ toJSON(steps.pages.outputs) }}"
          echo "Artifact location: ${{ runner.temp }}/_github_workflow"

      - name: Verify artifact
        run: |
          ls -la ${{ runner.temp }}
          ls -la ${{ github.workspace }}

      - name: Debug build output
        run: |
          pwd
          ls -la
          ls -la ./build || echo "Build directory does not exist"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: List Available Artifacts
        run: |
          echo "Listing all available artifacts:"
          ls -la ${{ runner.temp }}
          echo "Checking _github_workflow directory:"
          ls -la ${{ runner.temp }}/_github_workflow || echo "Directory not found"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
        with:
          artifact_name: github-pages