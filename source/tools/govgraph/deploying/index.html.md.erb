---
title: Deploying GovGraph
weight: 33
last_reviewed_on: 2023-06-20
review_in: 6 months
---

# Deploying GovGraph

GovGraph is several independent processes, orchestrated by schedules and
triggers.  Some of it is purely infrastructure in GCP (Google Cloud Platform).
Some of it is code that GCP resources refer to.  We use Terraform to deploy the
infrastructure. We use GitHub Actions to deploy the code.

## Terraform

GovGraph is hosted in GCP (Google Cloud Platform), configured with Terraform.

* [Production](https://console.cloud.google.com/welcome?project=govuk-knowledge-graph) is configured in the `terraform` folder.
* [Staging](https://console.cloud.google.com/welcome?project=govuk-knowledge-graph-staging) is configured in the `terraform-staging` folder.
* [Development](https://console.cloud.google.com/welcome?project=govuk-knowledge-graph-dev) is configured in the `terraform-dev` folder.

You will need to install Terraform.  We recommend that you use `tfenv` to install version 1.3.4.

Deploy the terraform configuration as follows.

1. Open a terminal and navigate to the relevant terraform folder.
2. Run `terraform plan` and check that it proposes to do what you expect.
3. Run `terraform apply`.

Check whether you need to [deploy GitHub code](#github) too.

Check whether you need to [manually run the data pipelines](#manually) too.

### When to deploy Terraform

Any changes in the `terraform` folder that are merged in to the `main` branch in GitHub should be deployed immediately.

Changes should only be deployed to the other environments when you are sure that nobody needs them to remain in their current configuration.  Reasons to keep those environments in a configuration that differs from the production environment include:

* Doing user research on stable version
* Testing something new

### IAM roles required in other projects

All the GCP projects have the same set service accounts, which need roles and
permissions in other projects.

* [Production](https://console.cloud.google.com/welcome?project=govuk-knowledge-graph)
* [Staging](https://console.cloud.google.com/welcome?project=govuk-knowledge-graph-staging)
* [Development](https://console.cloud.google.com/welcome?project=govuk-knowledge-graph-dev)

| These service accounts in the Knowledge Graph projects | need these IAM roles | in these GCP projects | for these resources |
| --- | --- | --- | --- |
| `gce_mongodb` `gce_postgres` | `roles/storage.objectViewer` | [govuk-s3-mirror][govuk-s3-mirror] | Storage bucket `govuk-s3-mirror_govuk-integration-database-backups` |
| `bigquery_page_transitions` | `roles/bigquery.dataViewer` | [ga4-analytics-352613][ga4-analytics-352613] | BigQuery dataset `analytics_330577055` |
| `gce_neo4j` `bigquery_scheduled_queries_search` | `roles/storage.objectViewer` | [cpto-content-metadata][cpto-content-metadata] | Storage bucket `cpto-content-metadata` |


## GitHub

Some GCP resources execute code that they fetch from a copy of the head of the GitHub repository, stored in a bucket called `govuk-knowledge-graph-repository` or `govuk-knowledge-graph-staging-repository` (etc. for other environments).  Fresh copies of the repository are made by GitHub Actions that are triggered by merges in to the `main`, `staging` and `dev` branches.

### Production

A typical workflow for deploying changed code into production is to merge a pull
request.  This will trigger a GitHub Action that will copy the entire head of
the repository into the bucket `govuk-knowledge-graph-repository`, which is in
the production environment of GovGraph.

### Other environments

A typical workflow for deploying changed code into non-production environments
is to force-push a local branch into GitHub's `dev` or `staging` branch.  This
will trigger a GitHub Action that will copy the entire head of the repository
into the bucket `govuk-knowledge-graph-staging-repository` (or
`govuk-knowledge-graph-dev`), which is in the staging (or development)
environment of GovGraph.

```sh
git push --force origin my-local-branch:staging
```

Check whether you need to [deploy Terraform](#terraform) too.

Check whether you need to [manually run the data pipelines](#manually) too.

## Running the data pipelines

### Automatically

The data pipelines run automatically as follows:

1. The [govuk-s3-mirror][govuk-s3-mirror] project obtains a new database backup
   file from GOV.UK, places it into a bucket, and publishes a notification to
   Pub/Sub.
2. A
   [workflow](https://console.cloud.google.com/workflows/workflow/europe-west2/govuk-integration-database-backups/executions?project=govuk-knowledge-graph)
   that subscribes to Pub/Sub checks whether the file is for MongoDB or
   Postgres, and if so, creates a new virtual machine instance from an [instance
   template](https://console.cloud.google.com/compute/instanceTemplates/list?project=govuk-knowledge-graph-staging)
   of mongodb or postgres.
3. The instance fetches a script
   ([docker/mongodb/run.sh](https://console.cloud.google.com/storage/browser/_details/govuk-knowledge-graph-dev-repository/docker/mongodb/run.sh),
   [postgres](https://console.cloud.google.com/storage/browser/_details/govuk-knowledge-graph-dev-repository/docker/postgres/run.sh)) and executes it.
4. The script tells the instance how to query the database, transform the results,
   upload the results to a
   [bucket](https://console.cloud.google.com/storage/browser/govuk-knowledge-graph-data-processed),
   and transfer the data from the bucket into BigQuery tables.
5. The script tells the instance to delete itself.
5. Daily at 0600, [scheduled BigQuery
   queries](https://console.cloud.google.com/bigquery/scheduled-queries?project=govuk-knowledge-graph)
   run.  The queries are defined in the folder `terraform/bigquery/` (and
   in a similar place for the other environments).

### Manually

You can trigger a new virtual machine instance by manually re-executing the
[workflow](https://console.cloud.google.com/workflows/workflow/europe-west2/govuk-integration-database-backups/executions?project=govuk-knowledge-graph).
Choose a workflow run that previously successfully started mongodb or postgres
(whichever one you want to run).

You might want to prevent the instance from deleting itself when it has
finished.  One way to do that is to wait until it has started, and then revoke
its `compute.instanceAdmin.v1` IAM role.  Another way is to edit the `run.sh`
script to remove the line that deletes the instance, upload that version of the
script to the
[bucket](https://console.cloud.google.com/storage/browser/govuk-knowledge-graph-repository), and then trigger the instance.

Once the instance is running, you can SSH into it from your local device, in the
terminal.

```sh
# SSH into the instance that hosts the mongodb docker image
gcloud compute ssh --zone "europe-west2-b" "mongodb" --project "govuk-knowledge-graph"

# Or SSH into the instance that hosts the postgres docker image
gcloud compute ssh --zone "europe-west2-b" "postres" --project "govuk-knowledge-graph"

# Wait a while for the docker image to start (about 30 seconds to a minute)

# Get the ID of the docker image.
# Mongodb is usually klt--yhxe
# Postgres is usually klt--wttb
docker ps

# Tail the logs of the mongodb docker image
docker logs -tf klt--yhxe

# Tail the logs of the postgres docker image
docker logs -tf klt--wttb

# Otherwise, SSH directly from your device into the mongodb docker image
gcloud compute ssh --zone "europe-west2-b" "mongodb" --project "govuk-knowledge-graph" -- container "klt--yhxe"

# Or SSH directly from your device into the postgres docker image
gcloud compute ssh --zone "europe-west2-b" "postgres" --project "govuk-knowledge-graph" -- container "klt--wttb"
```

Once the workflow(s) have finished running, you might need to manually run the
[scheduled BigQuery
queries](https://console.cloud.google.com/bigquery/scheduled-queries?project=govuk-knowledge-graph)
run.  The queries are defined in the folder `terraform/bigquery/` (and in a
similar place for the other environments).  Do this by clicking on a query, and
then clicking "Schedule backfill", "Run one time transfer", "OK", which will run
the query immediately.

[govuk-s3-mirror]: https://github.com/alphagov/govuk-s3-mirror
